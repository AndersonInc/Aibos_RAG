name: Next.js CI/CD Pipeline

on:
  push:
    branches:
      - main 
      - staging  
  pull_request:
    branches:
      - main
      - staging

jobs:
  # 1. Setup Job to check for correct Node and Yarn versions
  setup:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.node.outputs.node-version }}
      yarn-version: ${{ steps.yarn.outputs.yarn-version }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup Node.js
        id: node
        uses: actions/setup-node@v3
        with:
          node-version: '18.20.4'  

      - name: Cache Yarn Dependencies
        id: yarn
        uses: actions/cache@v3
        with:
          path: ~/.yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

  # 2. Linting Job
  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run ESLint
        run: yarn lint
        env:
          CI: true

  # 3. Testing Job
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Run Unit Tests
        run: yarn test
        env:
          CI: true

      - name: Run End-to-End Tests
        run: yarn test:e2e
        env:
          CI: true

  # 4. Build Job
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build Next.js App
        run: yarn build
        env:
          CI: true

  # 5. Deployment Job 
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build for Deployment
        run: yarn build

      # Deployment 
      #- name: Deploy to Vercel
       # env:
       #   VERCEL_TOKEN:
       # run: |
        #  npx vercel --prod --token $VERCEL_TOKEN
